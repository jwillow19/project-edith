{"ast":null,"code":"import React from'react';import Button from'@material-ui/core/Button';import'./cart-dropdown.styles.scss';import{connect}from'react-redux';import CartItem from'./CartItem';import{withRouter}from'react-router-dom';import{toggleCart as _toggleCart}from'../../redux/actions/cart';import{selectCartItems}from'../../redux/selectors/cart.selector';import{createStructuredSelector}from'reselect';var CartDropdown=function CartDropdown(_ref){var cartItems=_ref.cartItems,history=_ref.history,toggleCart=_ref.toggleCart;return/*#__PURE__*/React.createElement(\"div\",{className:\"cart-dropdown\"},/*#__PURE__*/React.createElement(\"div\",{className:\"cart-items\"},cartItems.length?cartItems.map(function(cartItem){return/*#__PURE__*/React.createElement(CartItem,{key:cartItem.id,item:cartItem});}):/*#__PURE__*/React.createElement(\"span\",{className:\"empty-message\"},\"Your cart is empty\")),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){history.push('/checkout');toggleCart();}},\"CHECKOUT\"));};var mapStateToProps=createStructuredSelector({cartItems:selectCartItems});var mapDispatchToProps=function mapDispatchToProps(dispatch){return{toggleCart:function toggleCart(){return dispatch(_toggleCart());}};};export default withRouter(connect(mapStateToProps,mapDispatchToProps)(CartDropdown));","map":{"version":3,"sources":["/home/jwillow/Documents/Web Dev/project-edith/client/src/components/cart/CartDropdown.jsx"],"names":["React","Button","connect","CartItem","withRouter","toggleCart","selectCartItems","createStructuredSelector","CartDropdown","cartItems","history","length","map","cartItem","id","push","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAO,6BAAP,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,UAAU,GAAVA,CAAAA,WAAT,KAA2B,0BAA3B,CACA,OAASC,eAAT,KAAgC,qCAAhC,CACA,OAASC,wBAAT,KAAyC,UAAzC,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAwC,IAArCC,CAAAA,SAAqC,MAArCA,SAAqC,CAA1BC,OAA0B,MAA1BA,OAA0B,CAAjBL,UAAiB,MAAjBA,UAAiB,CAC3D,mBACE,2BAAK,SAAS,CAAC,eAAf,eACE,2BAAK,SAAS,CAAC,YAAf,EACGI,SAAS,CAACE,MAAV,CACCF,SAAS,CAACG,GAAV,CAAc,SAACC,QAAD,qBACZ,oBAAC,QAAD,EAAU,GAAG,CAAEA,QAAQ,CAACC,EAAxB,CAA4B,IAAI,CAAED,QAAlC,EADY,EAAd,CADD,cAKC,4BAAM,SAAS,CAAC,eAAhB,uBANJ,CADF,cAWE,oBAAC,MAAD,EACE,OAAO,CAAE,kBAAM,CACbH,OAAO,CAACK,IAAR,CAAa,WAAb,EACAV,UAAU,GACX,CAJH,aAXF,CADF,CAsBD,CAvBD,CA6BA,GAAMW,CAAAA,eAAe,CAAGT,wBAAwB,CAAC,CAC/CE,SAAS,CAAEH,eADoC,CAAD,CAAhD,CAGA,GAAMW,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,QAAe,CACxCb,UAAU,CAAE,4BAAMa,CAAAA,QAAQ,CAACb,WAAU,EAAX,CAAd,EAD4B,CAAf,EAA3B,CAIA,cAAeD,CAAAA,UAAU,CACvBF,OAAO,CAACc,eAAD,CAAkBC,kBAAlB,CAAP,CAA6CT,YAA7C,CADuB,CAAzB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport './cart-dropdown.styles.scss';\nimport { connect } from 'react-redux';\nimport CartItem from './CartItem';\nimport { withRouter } from 'react-router-dom';\nimport { toggleCart } from '../../redux/actions/cart';\nimport { selectCartItems } from '../../redux/selectors/cart.selector';\nimport { createStructuredSelector } from 'reselect';\n\nconst CartDropdown = ({ cartItems, history, toggleCart }) => {\n  return (\n    <div className='cart-dropdown'>\n      <div className='cart-items'>\n        {cartItems.length ? (\n          cartItems.map((cartItem) => (\n            <CartItem key={cartItem.id} item={cartItem} />\n          ))\n        ) : (\n          <span className='empty-message'>Your cart is empty</span>\n        )}\n      </div>\n\n      <Button\n        onClick={() => {\n          history.push('/checkout');\n          toggleCart();\n        }}\n      >\n        CHECKOUT\n      </Button>\n    </div>\n  );\n};\n\nCartDropdown.propTypes = {\n  cartItems: PropTypes.array.isRequired,\n  toggleCart: PropTypes.func.isRequired,\n};\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  toggleCart: () => dispatch(toggleCart()),\n});\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(CartDropdown)\n);\n"]},"metadata":{},"sourceType":"module"}