{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectShop = state => state.shop; // Select the list of collection objects from shop state\n\n\nexport const selectShopCollections = createSelector([selectShop], shop => shop.collections); // [NOTE]\n// 1. get keys from collections object - ['hats', 'jackets', 'sneakers', ...]\n// 2. map each key to return a collection object\n// 3. returns a list of collection objects for CollectionOverview to pass to CollectionPreview\n\nexport const selectCollectionsForPreview = createSelector([selectShopCollections], collections => Object.keys(collections).map(key => collections[key])); // Select the collection which has matching key value as the url-param\n\nexport const selectCollection = collectionUrlParam => createSelector([selectShopCollections], collections => collections[collectionUrlParam]); // Select a product in a collection with matching key value as url-param","map":{"version":3,"sources":["/home/jwillow/Documents/Web Dev/project-edith/src/redux/selectors/shop.selector.js"],"names":["createSelector","selectShop","state","shop","selectShopCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectCollection","collectionUrlParam"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAApC,C,CAEA;;;AACA,OAAO,MAAMC,qBAAqB,GAAGJ,cAAc,CACjD,CAACC,UAAD,CADiD,EAEhDE,IAAD,IAAUA,IAAI,CAACE,WAFkC,CAA5C,C,CAKP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACvD,CAACI,qBAAD,CADuD,EAEtDC,WAAD,IAAiBE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA8BC,GAAD,IAASL,WAAW,CAACK,GAAD,CAAjD,CAFsC,CAAlD,C,CAKP;;AACA,OAAO,MAAMC,gBAAgB,GAAIC,kBAAD,IAC9BZ,cAAc,CACZ,CAACI,qBAAD,CADY,EAEXC,WAAD,IAAiBA,WAAW,CAACO,kBAAD,CAFhB,CADT,C,CAMP","sourcesContent":["import { createSelector } from 'reselect';\n\nconst selectShop = (state) => state.shop;\n\n// Select the list of collection objects from shop state\nexport const selectShopCollections = createSelector(\n  [selectShop],\n  (shop) => shop.collections\n);\n\n// [NOTE]\n// 1. get keys from collections object - ['hats', 'jackets', 'sneakers', ...]\n// 2. map each key to return a collection object\n// 3. returns a list of collection objects for CollectionOverview to pass to CollectionPreview\nexport const selectCollectionsForPreview = createSelector(\n  [selectShopCollections],\n  (collections) => Object.keys(collections).map((key) => collections[key])\n);\n\n// Select the collection which has matching key value as the url-param\nexport const selectCollection = (collectionUrlParam) =>\n  createSelector(\n    [selectShopCollections],\n    (collections) => collections[collectionUrlParam]\n  );\n\n// Select a product in a collection with matching key value as url-param\n"]},"metadata":{},"sourceType":"module"}