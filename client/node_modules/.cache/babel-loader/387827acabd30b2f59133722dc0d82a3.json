{"ast":null,"code":"var _jsxFileName = \"/home/jwillow/Documents/Web Dev/project-edith/src/components/auth/Login.jsx\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport { googleSignInStart, emailSignInStart } from '../../redux/actions/user';\nimport { connect } from 'react-redux'; // import { loginWithEmailAndPassword } from '../../redux/actions/user';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#424242'\n    },\n    secondary: {\n      main: '#2962ff'\n    }\n  }\n});\n\nconst useStyles = theme => ({\n  root: {\n    display: 'flex',\n    height: '100vh',\n    justifyContent: 'center'\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    position: 'center'\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  checkbox: {\n    margin: '10px'\n  },\n  text: {\n    fontWeight: '100'\n  },\n  submit: {\n    minWidth: '200px',\n    margin: 'auto',\n    marginTop: '20px',\n    marginBottom: '20px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\n\nconst Login = ({\n  classes,\n  googleSignInStart,\n  emailSignInStart\n}) => {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     email: '',\n  //     password: '',\n  //   };\n  // }\n  const [formState, setFormState] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = formState;\n\n  const handleOnChange = e => {\n    setFormState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // const { emailSignInStart } = this.props;\n\n    emailSignInStart(email, password); // try {\n    //   // firebase.auth method to sign in, search unique email identifier and verify password\n    //   await auth.signInWithEmailAndPassword(email, password);\n    //   this.setState({ email: '', password: '' });\n    // } catch (err) {\n    //   console.error(err);\n    // }\n  }; // render() {\n  // const { email, password } = this.state;\n  // const { classes, googleSignInStart } = this.props;\n\n\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    spacing: 8,\n    style: {\n      display: 'flex',\n      justifyContent: 'flex-end'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    sm: 6,\n    md: 6,\n    component: Paper,\n    elevation: 6,\n    square: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: e => handleSubmit(e),\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    onChange: e => handleOnChange(e),\n    margin: \"normal\",\n    required: true,\n    id: \"email\",\n    name: \"email\",\n    value: email,\n    autoComplete: \"email\",\n    autoFocus: true,\n    fullWidth: true,\n    label: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    onChange: e => handleOnChange(e),\n    margin: \"normal\",\n    required: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    value: password,\n    fullWidth: true,\n    autoComplete: \"current-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      value: \"remember\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 26\n      }\n    }),\n    label: \"Remember me\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    variant: \"contained\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    variant: \"outlined\",\n    onClick: googleSignInStart,\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  }, \"Sign in with Google\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, \"Forgot password?\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/register\",\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }, \"Don't have an account?\")))))))));\n}; // }\n// Login.propTypes = {\n//   loginWithEmailAndPassword: PropTypes.func.isRequired,\n// };\n\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(withStyles(useStyles)(Login));","map":{"version":3,"sources":["/home/jwillow/Documents/Web Dev/project-edith/src/components/auth/Login.jsx"],"names":["React","useState","PropTypes","TextField","Typography","FormControlLabel","Checkbox","Button","Grid","Paper","createMuiTheme","ThemeProvider","withStyles","Link","googleSignInStart","emailSignInStart","connect","theme","palette","primary","main","secondary","useStyles","root","display","height","justifyContent","form","width","marginTop","spacing","position","paper","margin","flexDirection","alignItems","checkbox","text","fontWeight","submit","minWidth","marginBottom","Login","classes","formState","setFormState","email","password","handleOnChange","e","target","name","value","handleSubmit","preventDefault","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/actions/user';\nimport { connect } from 'react-redux';\n// import { loginWithEmailAndPassword } from '../../redux/actions/user';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#424242',\n    },\n    secondary: {\n      main: '#2962ff',\n    },\n  },\n});\n\nconst useStyles = (theme) => ({\n  root: {\n    display: 'flex',\n    height: '100vh',\n    justifyContent: 'center',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    position: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  checkbox: {\n    margin: '10px',\n  },\n  text: {\n    fontWeight: '100',\n  },\n  submit: {\n    minWidth: '200px',\n    margin: 'auto',\n    marginTop: '20px',\n    marginBottom: '20px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nconst Login = ({ classes, googleSignInStart, emailSignInStart }) => {\n  // constructor(props) {\n  //   super(props);\n\n  //   this.state = {\n  //     email: '',\n  //     password: '',\n  //   };\n  // }\n\n  const [formState, setFormState] = useState({\n    email: '',\n    password: '',\n  });\n\n  const { email, password } = formState;\n\n  const handleOnChange = (e) => {\n    setFormState({ [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // const { emailSignInStart } = this.props;\n    emailSignInStart(email, password);\n    // try {\n    //   // firebase.auth method to sign in, search unique email identifier and verify password\n    //   await auth.signInWithEmailAndPassword(email, password);\n    //   this.setState({ email: '', password: '' });\n    // } catch (err) {\n    //   console.error(err);\n    // }\n  };\n\n  // render() {\n  // const { email, password } = this.state;\n  // const { classes, googleSignInStart } = this.props;\n  return (\n    <ThemeProvider theme={theme}>\n      <Grid\n        container\n        direction='column'\n        alignItems='center'\n        spacing={8}\n        style={{ display: 'flex', justifyContent: 'flex-end' }}\n      >\n        <Grid item xs={6} sm={6} md={6} component={Paper} elevation={6} square>\n          <div className={classes.paper}>\n            <Typography component='h1' variant='h5'>\n              Sign in\n            </Typography>\n\n            <form\n              className={classes.form}\n              onSubmit={(e) => handleSubmit(e)}\n              noValidate\n            >\n              <Grid item>\n                <TextField\n                  onChange={(e) => handleOnChange(e)}\n                  margin='normal'\n                  required\n                  id='email'\n                  name='email'\n                  value={email}\n                  autoComplete='email'\n                  autoFocus\n                  fullWidth\n                  label='Email'\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  onChange={(e) => handleOnChange(e)}\n                  margin='normal'\n                  required\n                  name='password'\n                  label='Password'\n                  type='password'\n                  id='password'\n                  value={password}\n                  fullWidth\n                  autoComplete='current-password'\n                />\n              </Grid>\n\n              <div style={{ margin: '10px' }}></div>\n\n              <FormControlLabel\n                control={<Checkbox value='remember' color='primary' />}\n                label='Remember me'\n              />\n\n              <Button\n                type='submit'\n                color='primary'\n                variant='contained'\n                className={classes.submit}\n              >\n                Sign In\n              </Button>\n              <Button\n                color='secondary'\n                variant='outlined'\n                onClick={googleSignInStart}\n                className={classes.submit}\n              >\n                Sign in with Google\n              </Button>\n\n              <Grid container>\n                <Grid item xs>\n                  <Link to='/' variant='body2'>\n                    <p>Forgot password?</p>\n                  </Link>\n                </Grid>\n                <Grid item xs>\n                  <Link to='/register' variant='body2'>\n                    <p className={classes.text}>Don't have an account?</p>\n                  </Link>\n                </Grid>\n              </Grid>\n            </form>\n          </div>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n};\n// }\n\n// Login.propTypes = {\n//   loginWithEmailAndPassword: PropTypes.func.isRequired,\n// };\n\nconst mapDispatchToProps = (dispatch) => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) =>\n    dispatch(emailSignInStart({ email, password })),\n});\nexport default connect(null, mapDispatchToProps)(withStyles(useStyles)(Login));\n"]},"metadata":{},"sourceType":"module"}