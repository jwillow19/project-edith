{"ast":null,"code":"var _jsxFileName = \"/home/jwillow/Documents/Web Dev/project-edith/src/App.js\";\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Home from './page/home/Home';\nimport Shop from './page/shop/Shop';\nimport Checkout from './components/checkout/Checkout';\nimport Header from './components/header/Header';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCurrentUser } from './redux/selectors/user.selector';\nimport { checkUserSession } from './redux/actions/user';\nimport './App.css';\n\nconst App = ({\n  checkUserSession,\n  currentUser\n}) => {\n  useEffect(() => {\n    checkUserSession();\n  }, [currecheckUserSessionntUser]); // componentDidMount() {\n  //   const { checkUserSession } = this.props;\n  //   checkUserSession();\n  //   // Destructure in props in class component\n  //   // open-subscription between App & Firebase\n  //   // auth.onAuthStateChanged triggers and reutnr user obj if authenticated, otherwise returns null\n  //   // this.unsubscribeAuth = auth.onAuthStateChanged(async (userAuth) => {\n  //   //   try {\n  //   //     // on sign-in\n  //   //     if (userAuth) {\n  //   //       const userRef = await createUserProfile(userAuth);\n  //   //       // this line sees if DB has changed by looking at snapshot\n  //   //       userRef.onSnapshot((snapshot) => {\n  //   //         setUser({\n  //   //           id: snapshot.id,\n  //   //           ...snapshot.data(),\n  //   //         });\n  //   //       });\n  //   //     } else {\n  //   //       // userAuth = null on Logout, set state to null\n  //   //       setUser(userAuth);\n  //   //       // add collections to store - run once and remove\n  //   //       // addCollectionAndDocuments(\n  //   //       //   'collections',\n  //   //       //   collectionsArray.map(({ title, items }) => ({ title, items }))\n  //   //       // );\n  //   //     }\n  //   //   } catch (err) {\n  //   //     console.error(err);\n  //   //   }\n  //   // });\n  // }\n  // componentWillUnmount() {\n  //   // close subscription from auth to prevent memory leak\n  //   this.unsubscribeAuth();\n  // }\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/shop\",\n    component: Shop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/login\",\n    render: () => currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 42\n      }\n    }) : /*#__PURE__*/React.createElement(Login, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 64\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/register\",\n    render: () => currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 42\n      }\n    }) : /*#__PURE__*/React.createElement(Register, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 64\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/checkout\",\n    component: Checkout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n}); // // NOTE: how you would dispatch without redux-thunk\n\nconst mapDispatchToProps = dispatch => ({\n  // setUser: (user) => dispatch(setUser(user)),\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/jwillow/Documents/Web Dev/project-edith/src/App.js"],"names":["React","useEffect","PropTypes","Home","Shop","Checkout","Header","Login","Register","BrowserRouter","Router","Route","Switch","Redirect","connect","createStructuredSelector","selectCurrentUser","checkUserSession","App","currentUser","currecheckUserSessionntUser","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Home from './page/home/Home';\nimport Shop from './page/shop/Shop';\nimport Checkout from './components/checkout/Checkout';\n\nimport Header from './components/header/Header';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\n\nimport { connect } from 'react-redux';\n\nimport { createStructuredSelector } from 'reselect';\nimport { selectCurrentUser } from './redux/selectors/user.selector';\nimport { checkUserSession } from './redux/actions/user';\nimport './App.css';\n\nconst App = ({ checkUserSession, currentUser }) => {\n  useEffect(() => {\n    checkUserSession();\n  }, [currecheckUserSessionntUser]);\n\n  // componentDidMount() {\n  //   const { checkUserSession } = this.props;\n  //   checkUserSession();\n  //   // Destructure in props in class component\n  //   // open-subscription between App & Firebase\n  //   // auth.onAuthStateChanged triggers and reutnr user obj if authenticated, otherwise returns null\n  //   // this.unsubscribeAuth = auth.onAuthStateChanged(async (userAuth) => {\n  //   //   try {\n  //   //     // on sign-in\n  //   //     if (userAuth) {\n  //   //       const userRef = await createUserProfile(userAuth);\n  //   //       // this line sees if DB has changed by looking at snapshot\n  //   //       userRef.onSnapshot((snapshot) => {\n  //   //         setUser({\n  //   //           id: snapshot.id,\n  //   //           ...snapshot.data(),\n  //   //         });\n  //   //       });\n  //   //     } else {\n  //   //       // userAuth = null on Logout, set state to null\n  //   //       setUser(userAuth);\n  //   //       // add collections to store - run once and remove\n  //   //       // addCollectionAndDocuments(\n  //   //       //   'collections',\n  //   //       //   collectionsArray.map(({ title, items }) => ({ title, items }))\n  //   //       // );\n  //   //     }\n  //   //   } catch (err) {\n  //   //     console.error(err);\n  //   //   }\n  //   // });\n  // }\n\n  // componentWillUnmount() {\n  //   // close subscription from auth to prevent memory leak\n  //   this.unsubscribeAuth();\n  // }\n\n  return (\n    <Router>\n      <Header />\n      <div>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route path='/shop' component={Shop} />\n\n          <Route\n            path='/login'\n            render={() => (currentUser ? <Redirect to='/' /> : <Login />)}\n          />\n          <Route\n            path='/register'\n            render={() => (currentUser ? <Redirect to='/' /> : <Register />)}\n          />\n          <Route exact path='/checkout' component={Checkout} />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n});\n\n// // NOTE: how you would dispatch without redux-thunk\nconst mapDispatchToProps = (dispatch) => ({\n  // setUser: (user) => dispatch(setUser(user)),\n  checkUserSession: () => dispatch(checkUserSession()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}