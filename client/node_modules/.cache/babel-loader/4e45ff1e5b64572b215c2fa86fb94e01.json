{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { FETCH_COLLECTIONS_START, FETCH_COLLECTIONS_SUCCESS, FETCH_COLLECTIONS_FAILURE } from '../actions/types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/db';\nexport function* fetchCollectionsAsync() {\n  yield console.log('something');\n  const collectionRef = firestore.collection('collections');\n  dispatch(fetchCollectionsStart()); //  Promise styled fetch:\n\n  try {\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    });\n  } catch (err) {\n    dispatch(fetchCollectionsFailure(err.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  // for a specified action_type, listen to every instance of that type\n  yield takeEvery(FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/home/jwillow/Documents/Web Dev/project-edith/src/redux/saga/shop.sagas.js"],"names":["takeEvery","FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","FETCH_COLLECTIONS_FAILURE","firestore","convertCollectionsSnapshotToMap","fetchCollectionsAsync","console","log","collectionRef","collection","dispatch","fetchCollectionsStart","get","then","snapshot","collectionsMap","fetchCollectionsSuccess","err","fetchCollectionsFailure","message"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SACEC,uBADF,EAEEC,yBAFF,EAGEC,yBAHF,QAIO,kBAJP;AAKA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,mBAA3D;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAN;AACA,QAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACAC,EAAAA,QAAQ,CAACC,qBAAqB,EAAtB,CAAR,CAHuC,CAIvC;;AACA,MAAI;AACFH,IAAAA,aAAa,CAACI,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAc;AACrC,YAAMC,cAAc,GAAGX,+BAA+B,CAACU,QAAD,CAAtD;AACAJ,MAAAA,QAAQ,CAACM,uBAAuB,CAACD,cAAD,CAAxB,CAAR;AACD,KAHD;AAID,GALD,CAKE,OAAOE,GAAP,EAAY;AACZP,IAAAA,QAAQ,CAACQ,uBAAuB,CAACD,GAAG,CAACE,OAAL,CAAxB,CAAR;AACD;AACF;AAED,OAAO,UAAUR,qBAAV,GAAkC;AACvC;AACA,QAAMZ,SAAS,CAACC,uBAAD,EAA0BK,qBAA1B,CAAf;AACD","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\nimport {\n  FETCH_COLLECTIONS_START,\n  FETCH_COLLECTIONS_SUCCESS,\n  FETCH_COLLECTIONS_FAILURE,\n} from '../actions/types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/db';\n\nexport function* fetchCollectionsAsync() {\n  yield console.log('something');\n  const collectionRef = firestore.collection('collections');\n  dispatch(fetchCollectionsStart());\n  //  Promise styled fetch:\n  try {\n    collectionRef.get().then((snapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    });\n  } catch (err) {\n    dispatch(fetchCollectionsFailure(err.message));\n  }\n}\n\nexport function* fetchCollectionsStart() {\n  // for a specified action_type, listen to every instance of that type\n  yield takeEvery(FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n"]},"metadata":{},"sourceType":"module"}