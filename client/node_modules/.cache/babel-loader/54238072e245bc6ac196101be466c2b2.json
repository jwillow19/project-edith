{"ast":null,"code":"var _jsxFileName = \"/home/jwillow/Documents/Web Dev/project-edith/client/src/components/stripe/StripeButton.jsx\";\nimport React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport logo from '../../assets/refine-logo.png';\nimport axios from 'axios';\n\nconst StripeButton = ({\n  price\n}) => {\n  const priceInCent = price * 100;\n  const publishableKey = 'pk_test_2dS6LunL71FlSuRqeJU14RuF00TF6VuBIA';\n  console.log(typeof priceInCent); // @handler handleToken send payment post-req to backend\n\n  const handleToken = token => {\n    console.log(token); // axios post-req to backend with payment information\n\n    axios({\n      url: 'http://localhost:5000/payment',\n      method: 'post',\n      data: {\n        amount: priceInCent,\n        token\n      }\n    }).then(respsonse => {\n      alert('Payment Success');\n    }).catch(error => {\n      console.log('Payment Error: ', error.respsonse);\n      alert(`Issue with payment.`);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(StripeCheckout, {\n    name: \"Edith Eyewear Ltd.\" // the pop-in header title\n    ,\n    description: `Your total is $${price}` // the pop-in header subtitle\n    ,\n    image: logo // the pop-in header image (default none)\n    //   ComponentClass='div'\n    ,\n    label: \"Pay Now\",\n    panelLabel: \"Pay Now\" // prepended to the amount in the bottom pay button\n    ,\n    amount: priceInCent // cents\n    ,\n    stripeKey: publishableKey //   email='info@vidhub.co'\n    // Note: Enabling either address option will give the user the ability to\n    // fill out both. Addresses are sent as a second parameter in the token callback.\n    ,\n    shippingAddress: true,\n    billingAddress: true // Note: enabling both zipCode checks and billing or shipping address will\n    // cause zipCheck to be pulled from billing address (set to shipping if none provided).\n    ,\n    zipCode: false,\n    alipay: true // accept Alipay (default false)\n    ,\n    bitcoin: true // accept Bitcoins (default false)\n    ,\n    allowRememberMe: true // \"Remember Me\" option (default true)\n    ,\n    token: handleToken // submit callback\n    //   opened={this.onOpened} // called when the checkout popin is opened (no IE6/7)\n    //   closed={this.onClosed} // called when the checkout popin is closed (no IE6/7)\n    // Note: `reconfigureOnUpdate` should be set to true IFF, for some reason\n    // you are using multiple stripe keys\n    ,\n    reconfigureOnUpdate: false,\n    triggerEvent: \"onClick\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default StripeButton;","map":{"version":3,"sources":["/home/jwillow/Documents/Web Dev/project-edith/client/src/components/stripe/StripeButton.jsx"],"names":["React","StripeCheckout","logo","axios","StripeButton","price","priceInCent","publishableKey","console","log","handleToken","token","url","method","data","amount","then","respsonse","alert","catch","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,IAAP,MAAiB,8BAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAClC,QAAMC,WAAW,GAAGD,KAAK,GAAG,GAA5B;AACA,QAAME,cAAc,GAAG,4CAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAOH,WAAnB,EAHkC,CAIlC;;AACA,QAAMI,WAAW,GAAIC,KAAD,IAAW;AAC7BH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ,EAD6B,CAE7B;;AACAR,IAAAA,KAAK,CAAC;AACJS,MAAAA,GAAG,EAAE,+BADD;AAEJC,MAAAA,MAAM,EAAE,MAFJ;AAGJC,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAET,WADJ;AAEJK,QAAAA;AAFI;AAHF,KAAD,CAAL,CAQGK,IARH,CAQSC,SAAD,IAAe;AACnBC,MAAAA,KAAK,CAAC,iBAAD,CAAL;AACD,KAVH,EAWGC,KAXH,CAWUC,KAAD,IAAW;AAChBZ,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BW,KAAK,CAACH,SAArC;AACAC,MAAAA,KAAK,CAAE,qBAAF,CAAL;AACD,KAdH;AAeD,GAlBD;;AAoBA,sBACE,oBAAC,cAAD;AACE,IAAA,IAAI,EAAC,oBADP,CAC4B;AAD5B;AAEE,IAAA,WAAW,EAAG,kBAAiBb,KAAM,EAFvC,CAE0C;AAF1C;AAGE,IAAA,KAAK,EAAEH,IAHT,CAGe;AACb;AAJF;AAKE,IAAA,KAAK,EAAC,SALR;AAME,IAAA,UAAU,EAAC,SANb,CAMuB;AANvB;AAOE,IAAA,MAAM,EAAEI,WAPV,CAOuB;AAPvB;AAQE,IAAA,SAAS,EAAEC,cARb,CASE;AACA;AACA;AAXF;AAYE,IAAA,eAAe,MAZjB;AAaE,IAAA,cAAc,MAbhB,CAcE;AACA;AAfF;AAgBE,IAAA,OAAO,EAAE,KAhBX;AAiBE,IAAA,MAAM,MAjBR,CAiBS;AAjBT;AAkBE,IAAA,OAAO,MAlBT,CAkBU;AAlBV;AAmBE,IAAA,eAAe,MAnBjB,CAmBkB;AAnBlB;AAoBE,IAAA,KAAK,EAAEG,WApBT,CAoBsB;AACpB;AACA;AACA;AACA;AAxBF;AAyBE,IAAA,mBAAmB,EAAE,KAzBvB;AA0BE,IAAA,YAAY,EAAC,SA1Bf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AA8BD,CAvDD;;AAyDA,eAAeN,YAAf","sourcesContent":["import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport logo from '../../assets/refine-logo.png';\nimport axios from 'axios';\n\nconst StripeButton = ({ price }) => {\n  const priceInCent = price * 100;\n  const publishableKey = 'pk_test_2dS6LunL71FlSuRqeJU14RuF00TF6VuBIA';\n  console.log(typeof priceInCent);\n  // @handler handleToken send payment post-req to backend\n  const handleToken = (token) => {\n    console.log(token);\n    // axios post-req to backend with payment information\n    axios({\n      url: 'http://localhost:5000/payment',\n      method: 'post',\n      data: {\n        amount: priceInCent,\n        token,\n      },\n    })\n      .then((respsonse) => {\n        alert('Payment Success');\n      })\n      .catch((error) => {\n        console.log('Payment Error: ', error.respsonse);\n        alert(`Issue with payment.`);\n      });\n  };\n\n  return (\n    <StripeCheckout\n      name='Edith Eyewear Ltd.' // the pop-in header title\n      description={`Your total is $${price}`} // the pop-in header subtitle\n      image={logo} // the pop-in header image (default none)\n      //   ComponentClass='div'\n      label='Pay Now'\n      panelLabel='Pay Now' // prepended to the amount in the bottom pay button\n      amount={priceInCent} // cents\n      stripeKey={publishableKey}\n      //   email='info@vidhub.co'\n      // Note: Enabling either address option will give the user the ability to\n      // fill out both. Addresses are sent as a second parameter in the token callback.\n      shippingAddress\n      billingAddress\n      // Note: enabling both zipCode checks and billing or shipping address will\n      // cause zipCheck to be pulled from billing address (set to shipping if none provided).\n      zipCode={false}\n      alipay // accept Alipay (default false)\n      bitcoin // accept Bitcoins (default false)\n      allowRememberMe // \"Remember Me\" option (default true)\n      token={handleToken} // submit callback\n      //   opened={this.onOpened} // called when the checkout popin is opened (no IE6/7)\n      //   closed={this.onClosed} // called when the checkout popin is closed (no IE6/7)\n      // Note: `reconfigureOnUpdate` should be set to true IFF, for some reason\n      // you are using multiple stripe keys\n      reconfigureOnUpdate={false}\n      triggerEvent='onClick'\n    />\n  );\n};\n\nexport default StripeButton;\n"]},"metadata":{},"sourceType":"module"}