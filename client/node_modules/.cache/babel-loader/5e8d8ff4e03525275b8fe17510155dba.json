{"ast":null,"code":"import _toConsumableArray from\"/home/jwillow/Documents/Web Dev/project-edith/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/jwillow/Documents/Web Dev/project-edith/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";export var addItemToCart=function addItemToCart(cartItems,itemToAdd){// check if item is in cart - .find() returns item that validation condition to true\nvar itemExist=cartItems.find(function(cartItem){return cartItem.id===itemToAdd.id;});// itemExist = null if itemToAdd not in cartItems\n// map each unique, individual item and increase quantity if same item - no duplicates\nif(itemExist){return cartItems.map(function(cartItem){return cartItem.id===itemToAdd.id?_objectSpread({},cartItem,{quantity:cartItem.quantity+1}):cartItem;});}return[].concat(_toConsumableArray(cartItems),[_objectSpread({},itemToAdd,{quantity:1})]);};export var sumQuantity=function sumQuantity(cartItems){var sum=cartItems.reduce(function(accumulator,cartItem){return accumulator+cartItem.quantity;},0);return sum;};//removes cartItem instance from cartItems array completely\nexport var removeItemFromCart=function removeItemFromCart(cartItems,itemToRemove){var newCartItem=cartItems.filter(function(cartItem){return cartItem.id!==itemToRemove.id;});return newCartItem;};//@decrease item quantity by one\nexport var decreaseItemCountByOne=function decreaseItemCountByOne(cartItems,itemToDecrease){var itemToModify=cartItems.find(function(cartItem){return cartItem.id===itemToDecrease.id;});// case: if quantity is 1, remove instance completely from cart\nif(itemToModify.quantity===1){return removeItemFromCart(cartItems,itemToModify);}// case: if quantity is >1, map through array, find the matching item, modify the quantity of that item and return the item state\nreturn cartItems.map(function(cartItem){return cartItem.id===itemToDecrease.id?_objectSpread({},cartItem,{quantity:cartItem.quantity-1}):_objectSpread({},cartItem);});};//@incrase item quantity by one\nexport var IncreaseItemCountByOne=function IncreaseItemCountByOne(cartItems,itemToIncrease){// [NOTE] - map through array, find the matching item, modify the quantity of that item and return the item state\nreturn cartItems.map(function(cartItem){return cartItem.id===itemToIncrease.id?_objectSpread({},cartItem,{quantity:cartItem.quantity+1}):_objectSpread({},cartItem);});};","map":{"version":3,"sources":["/home/jwillow/Documents/Web Dev/project-edith/client/src/utils/cart.utils.js"],"names":["addItemToCart","cartItems","itemToAdd","itemExist","find","cartItem","id","map","quantity","sumQuantity","sum","reduce","accumulator","removeItemFromCart","itemToRemove","newCartItem","filter","decreaseItemCountByOne","itemToDecrease","itemToModify","IncreaseItemCountByOne","itemToIncrease"],"mappings":"6VAAA,MAAO,IAAMA,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,SAAD,CAAYC,SAAZ,CAA0B,CACrD;AACA,GAAMC,CAAAA,SAAS,CAAGF,SAAS,CAACG,IAAV,CAAe,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,EAAT,GAAgBJ,SAAS,CAACI,EAAxC,EAAf,CAAlB,CAEA;AACA;AACA,GAAIH,SAAJ,CAAe,CACb,MAAOF,CAAAA,SAAS,CAACM,GAAV,CAAc,SAACF,QAAD,QACnBA,CAAAA,QAAQ,CAACC,EAAT,GAAgBJ,SAAS,CAACI,EAA1B,kBACSD,QADT,EACmBG,QAAQ,CAAEH,QAAQ,CAACG,QAAT,CAAoB,CADjD,GAEIH,QAHe,EAAd,CAAP,CAKD,CAED,mCAAWJ,SAAX,oBAA2BC,SAA3B,EAAsCM,QAAQ,CAAE,CAAhD,KACD,CAfM,CAiBP,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACR,SAAD,CAAe,CACxC,GAAIS,CAAAA,GAAG,CAAGT,SAAS,CAACU,MAAV,CAAiB,SAACC,WAAD,CAAcP,QAAd,CAA2B,CACpD,MAAOO,CAAAA,WAAW,CAAGP,QAAQ,CAACG,QAA9B,CACD,CAFS,CAEP,CAFO,CAAV,CAGA,MAAOE,CAAAA,GAAP,CACD,CALM,CAOP;AACA,MAAO,IAAMG,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACZ,SAAD,CAAYa,YAAZ,CAA6B,CAC7D,GAAMC,CAAAA,WAAW,CAAGd,SAAS,CAACe,MAAV,CAClB,SAACX,QAAD,QAAcA,CAAAA,QAAQ,CAACC,EAAT,GAAgBQ,YAAY,CAACR,EAA3C,EADkB,CAApB,CAGA,MAAOS,CAAAA,WAAP,CACD,CALM,CAOP;AACA,MAAO,IAAME,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAAChB,SAAD,CAAYiB,cAAZ,CAA+B,CACnE,GAAMC,CAAAA,YAAY,CAAGlB,SAAS,CAACG,IAAV,CACnB,SAACC,QAAD,QAAcA,CAAAA,QAAQ,CAACC,EAAT,GAAgBY,cAAc,CAACZ,EAA7C,EADmB,CAArB,CAGA;AACA,GAAIa,YAAY,CAACX,QAAb,GAA0B,CAA9B,CAAiC,CAC/B,MAAOK,CAAAA,kBAAkB,CAACZ,SAAD,CAAYkB,YAAZ,CAAzB,CACD,CACD;AACA,MAAOlB,CAAAA,SAAS,CAACM,GAAV,CAAc,SAACF,QAAD,QACnBA,CAAAA,QAAQ,CAACC,EAAT,GAAgBY,cAAc,CAACZ,EAA/B,kBACSD,QADT,EACmBG,QAAQ,CAAEH,QAAQ,CAACG,QAAT,CAAoB,CADjD,oBAESH,QAFT,CADmB,EAAd,CAAP,CAKD,CAdM,CAgBP;AACA,MAAO,IAAMe,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,CAACnB,SAAD,CAAYoB,cAAZ,CAA+B,CACnE;AACA,MAAOpB,CAAAA,SAAS,CAACM,GAAV,CAAc,SAACF,QAAD,QACnBA,CAAAA,QAAQ,CAACC,EAAT,GAAgBe,cAAc,CAACf,EAA/B,kBACSD,QADT,EACmBG,QAAQ,CAAEH,QAAQ,CAACG,QAAT,CAAoB,CADjD,oBAESH,QAFT,CADmB,EAAd,CAAP,CAKD,CAPM","sourcesContent":["export const addItemToCart = (cartItems, itemToAdd) => {\n  // check if item is in cart - .find() returns item that validation condition to true\n  const itemExist = cartItems.find((cartItem) => cartItem.id === itemToAdd.id);\n\n  // itemExist = null if itemToAdd not in cartItems\n  // map each unique, individual item and increase quantity if same item - no duplicates\n  if (itemExist) {\n    return cartItems.map((cartItem) =>\n      cartItem.id === itemToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    );\n  }\n\n  return [...cartItems, { ...itemToAdd, quantity: 1 }];\n};\n\nexport const sumQuantity = (cartItems) => {\n  let sum = cartItems.reduce((accumulator, cartItem) => {\n    return accumulator + cartItem.quantity;\n  }, 0);\n  return sum;\n};\n\n//removes cartItem instance from cartItems array completely\nexport const removeItemFromCart = (cartItems, itemToRemove) => {\n  const newCartItem = cartItems.filter(\n    (cartItem) => cartItem.id !== itemToRemove.id\n  );\n  return newCartItem;\n};\n\n//@decrease item quantity by one\nexport const decreaseItemCountByOne = (cartItems, itemToDecrease) => {\n  const itemToModify = cartItems.find(\n    (cartItem) => cartItem.id === itemToDecrease.id\n  );\n  // case: if quantity is 1, remove instance completely from cart\n  if (itemToModify.quantity === 1) {\n    return removeItemFromCart(cartItems, itemToModify);\n  }\n  // case: if quantity is >1, map through array, find the matching item, modify the quantity of that item and return the item state\n  return cartItems.map((cartItem) =>\n    cartItem.id === itemToDecrease.id\n      ? { ...cartItem, quantity: cartItem.quantity - 1 }\n      : { ...cartItem }\n  );\n};\n\n//@incrase item quantity by one\nexport const IncreaseItemCountByOne = (cartItems, itemToIncrease) => {\n  // [NOTE] - map through array, find the matching item, modify the quantity of that item and return the item state\n  return cartItems.map((cartItem) =>\n    cartItem.id === itemToIncrease.id\n      ? { ...cartItem, quantity: cartItem.quantity + 1 }\n      : { ...cartItem }\n  );\n};\n"]},"metadata":{},"sourceType":"module"}