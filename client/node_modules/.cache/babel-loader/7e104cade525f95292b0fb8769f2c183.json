{"ast":null,"code":"// This import loads the firebase namespace along with all its type information.\nimport * as firebase from 'firebase/app'; // These imports load individual services into the firebase namespace. (individual services get attached to 'firebase')\n\nimport 'firebase/auth';\nimport 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: 'AIzaSyD6Fy7kVGNScj8L5FLoZXO8385Oghx139s',\n  authDomain: 'project-edith-51131.firebaseapp.com',\n  databaseURL: 'https://project-edith-51131.firebaseio.com',\n  projectId: 'project-edith-51131',\n  storageBucket: 'project-edith-51131.appspot.com',\n  messagingSenderId: '766093877049',\n  appId: '1:766093877049:web:c33af656f32effde9512e8',\n  measurementId: 'G-SSJD9HZBV8'\n};\nfirebase.initializeApp(firebaseConfig); // For auth and using the db\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); // Google Sign-In authentication utility\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n}); // sign in with popup with the provider set to Google only (can be twitter etc...)\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/home/jwillow/Documents/Web Dev/project-edith/src/firebase/db.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA;AACA,OAAO,KAAKA,QAAZ,MAA0B,cAA1B,C,CAEA;;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,qCAFS;AAGrBC,EAAAA,WAAW,EAAE,4CAHQ;AAIrBC,EAAAA,SAAS,EAAE,qBAJU;AAKrBC,EAAAA,aAAa,EAAE,iCALM;AAMrBC,EAAAA,iBAAiB,EAAE,cANE;AAOrBC,EAAAA,KAAK,EAAE,2CAPc;AAQrBC,EAAAA,aAAa,EAAE;AARM,CAAvB;AAWAT,QAAQ,CAACU,aAAT,CAAuBT,cAAvB,E,CAEA;;AACA,OAAO,MAAMU,IAAI,GAAGX,QAAQ,CAACW,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGZ,QAAQ,CAACY,SAAT,EAAlB,C,CAEP;;AACA,MAAMC,QAAQ,GAAG,IAAIb,QAAQ,CAACW,IAAT,CAAcG,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B,E,CACA;;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAMN,IAAI,CAACO,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAeb,QAAf","sourcesContent":["// This import loads the firebase namespace along with all its type information.\nimport * as firebase from 'firebase/app';\n\n// These imports load individual services into the firebase namespace. (individual services get attached to 'firebase')\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyD6Fy7kVGNScj8L5FLoZXO8385Oghx139s',\n  authDomain: 'project-edith-51131.firebaseapp.com',\n  databaseURL: 'https://project-edith-51131.firebaseio.com',\n  projectId: 'project-edith-51131',\n  storageBucket: 'project-edith-51131.appspot.com',\n  messagingSenderId: '766093877049',\n  appId: '1:766093877049:web:c33af656f32effde9512e8',\n  measurementId: 'G-SSJD9HZBV8',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\n// For auth and using the db\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n// Google Sign-In authentication utility\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\n// sign in with popup with the provider set to Google only (can be twitter etc...)\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}