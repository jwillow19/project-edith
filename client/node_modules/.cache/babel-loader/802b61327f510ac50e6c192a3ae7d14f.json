{"ast":null,"code":"import cart from '../redux/reducers/cart';\nexport const addItemToCart = (cartItems, itemToAdd) => {\n  // check if item is in cart - .find() returns item that validation condition to true\n  const itemExist = cartItems.find(cartItem => cartItem.id === itemToAdd.id); // itemExist = null if itemToAdd not in cartItems\n  // map each unique, individual item and increase quantity if same item - no duplicates\n\n  if (itemExist) {\n    return cartItems.map(cartItem => cartItem.id === itemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...itemToAdd,\n    quantity: 1\n  }];\n};\nexport const sumQuantity = cartItems => {\n  let sum = cartItems.reduce((accumulator, cartItem) => {\n    return accumulator + cartItem.quantity;\n  }, 0);\n  return sum;\n}; //removes cartItem instance from cartItems array\n\nexport const removeItemFromCart = (cartItems, itemToRemove) => {\n  const itemInd = cartItems.findIndex(cartItem => cartItem.id == itemToRemove.id);\n  console.log(itemInd);\n  return cartItems.splice(itemInd, 1);\n};","map":{"version":3,"sources":["/home/jwillow/Documents/Web Dev/project-edith/src/utils/cart.utils.js"],"names":["cart","addItemToCart","cartItems","itemToAdd","itemExist","find","cartItem","id","map","quantity","sumQuantity","sum","reduce","accumulator","removeItemFromCart","itemToRemove","itemInd","findIndex","console","log","splice"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,wBAAjB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACrD;AACA,QAAMC,SAAS,GAAGF,SAAS,CAACG,IAAV,CAAgBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBJ,SAAS,CAACI,EAAvD,CAAlB,CAFqD,CAIrD;AACA;;AACA,MAAIH,SAAJ,EAAe;AACb,WAAOF,SAAS,CAACM,GAAV,CAAeF,QAAD,IACnBA,QAAQ,CAACC,EAAT,KAAgBJ,SAAS,CAACI,EAA1B,GACI,EAAE,GAAGD,QAAL;AAAeG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,KADJ,GAEIH,QAHC,CAAP;AAKD;;AAED,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,SAAL;AAAgBM,IAAAA,QAAQ,EAAE;AAA1B,GAAf,CAAP;AACD,CAfM;AAiBP,OAAO,MAAMC,WAAW,GAAIR,SAAD,IAAe;AACxC,MAAIS,GAAG,GAAGT,SAAS,CAACU,MAAV,CAAiB,CAACC,WAAD,EAAcP,QAAd,KAA2B;AACpD,WAAOO,WAAW,GAAGP,QAAQ,CAACG,QAA9B;AACD,GAFS,EAEP,CAFO,CAAV;AAGA,SAAOE,GAAP;AACD,CALM,C,CAOP;;AACA,OAAO,MAAMG,kBAAkB,GAAG,CAACZ,SAAD,EAAYa,YAAZ,KAA6B;AAC7D,QAAMC,OAAO,GAAGd,SAAS,CAACe,SAAV,CACbX,QAAD,IAAcA,QAAQ,CAACC,EAAT,IAAeQ,YAAY,CAACR,EAD5B,CAAhB;AAGAW,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,SAAOd,SAAS,CAACkB,MAAV,CAAiBJ,OAAjB,EAA0B,CAA1B,CAAP;AACD,CANM","sourcesContent":["import cart from '../redux/reducers/cart';\n\nexport const addItemToCart = (cartItems, itemToAdd) => {\n  // check if item is in cart - .find() returns item that validation condition to true\n  const itemExist = cartItems.find((cartItem) => cartItem.id === itemToAdd.id);\n\n  // itemExist = null if itemToAdd not in cartItems\n  // map each unique, individual item and increase quantity if same item - no duplicates\n  if (itemExist) {\n    return cartItems.map((cartItem) =>\n      cartItem.id === itemToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    );\n  }\n\n  return [...cartItems, { ...itemToAdd, quantity: 1 }];\n};\n\nexport const sumQuantity = (cartItems) => {\n  let sum = cartItems.reduce((accumulator, cartItem) => {\n    return accumulator + cartItem.quantity;\n  }, 0);\n  return sum;\n};\n\n//removes cartItem instance from cartItems array\nexport const removeItemFromCart = (cartItems, itemToRemove) => {\n  const itemInd = cartItems.findIndex(\n    (cartItem) => cartItem.id == itemToRemove.id\n  );\n  console.log(itemInd);\n  return cartItems.splice(itemInd, 1);\n};\n"]},"metadata":{},"sourceType":"module"}