{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore } from 'redux-persist';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport rootReducer from './reducers/index';\nimport CreateSagaMiddleware from 'reudx-saga';\nimport { fetchCollectionsStart } from './saga/shop.sagas';\nconst initialState = {}; // Saga middleware\n\nconst sagaMiddleware = CreateSagaMiddleware(); // create middleware - use logger middleware only in development\n\nconst middleware = [sagaMiddleware];\n\nif (process.ENV === 'development') {\n  middleware.push(logger);\n} // Create store\n\n\nexport const store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware))); // sagaMiddleware.run()\n// persist state with redux-persist\n\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/home/jwillow/Documents/Web Dev/project-edith/src/redux/store.js"],"names":["createStore","applyMiddleware","composeWithDevTools","persistStore","thunk","logger","rootReducer","CreateSagaMiddleware","fetchCollectionsStart","initialState","sagaMiddleware","middleware","process","ENV","push","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,qBAAT,QAAsC,mBAAtC;AAEA,MAAMC,YAAY,GAAG,EAArB,C,CAEA;;AACA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C,C,CAEA;;AACA,MAAMI,UAAU,GAAG,CAACD,cAAD,CAAnB;;AAEA,IAAIE,OAAO,CAACC,GAAR,KAAgB,aAApB,EAAmC;AACjCF,EAAAA,UAAU,CAACG,IAAX,CAAgBT,MAAhB;AACD,C,CAED;;;AACA,OAAO,MAAMU,KAAK,GAAGf,WAAW,CAC9BM,WAD8B,EAE9BG,YAF8B,EAG9BP,mBAAmB,CAACD,eAAe,CAAC,GAAGU,UAAJ,CAAhB,CAHW,CAAzB,C,CAMP;AAEA;;AACA,OAAO,MAAMK,SAAS,GAAGb,YAAY,CAACY,KAAD,CAA9B","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistStore } from 'redux-persist';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport rootReducer from './reducers/index';\nimport CreateSagaMiddleware from 'reudx-saga';\nimport { fetchCollectionsStart } from './saga/shop.sagas';\n\nconst initialState = {};\n\n// Saga middleware\nconst sagaMiddleware = CreateSagaMiddleware();\n\n// create middleware - use logger middleware only in development\nconst middleware = [sagaMiddleware];\n\nif (process.ENV === 'development') {\n  middleware.push(logger);\n}\n\n// Create store\nexport const store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\n// sagaMiddleware.run()\n\n// persist state with redux-persist\nexport const persistor = persistStore(store);\n"]},"metadata":{},"sourceType":"module"}