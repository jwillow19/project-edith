{"ast":null,"code":"import{FETCH_COLLECTIONS_START,FETCH_COLLECTIONS_SUCCESS,FETCH_COLLECTIONS_FAILURE}from'./types';// export const updateCollections = (collectionsMap) => (dispatch) => {\n//   dispatch({\n//     type: UPDATE_COLLECTIONS,\n//     payload: collectionsMap,\n//   });\n// };\nexport var fetchCollectionsStart=function fetchCollectionsStart(){return{type:FETCH_COLLECTIONS_START};};export var fetchCollectionsSuccess=function fetchCollectionsSuccess(collectionsMap){return{type:FETCH_COLLECTIONS_SUCCESS,payload:collectionsMap};};export var fetchCollectionsFailure=function fetchCollectionsFailure(errorMessage){return{type:FETCH_COLLECTIONS_FAILURE,payload:errorMessage};};// @action  fetchCollectionsStartAsync promise-based action moved to saga instead\n// export const fetchCollectionsStartAsync = () => (dispatch) => {\n//   const collectionRef = firestore.collection('collections');\n//   dispatch(fetchCollectionsStart());\n//   //  Promise styled fetch:\n//   try {\n//     collectionRef.get().then((snapshot) => {\n//       const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n//       dispatch(fetchCollectionsSuccess(collectionsMap));\n//     });\n//   } catch (err) {\n//     dispatch(fetchCollectionsFailure(err.message));\n//   }\n// };","map":{"version":3,"sources":["/home/jwillow/Documents/Web Dev/project-edith/client/src/redux/actions/shop.js"],"names":["FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStart","type","fetchCollectionsSuccess","collectionsMap","payload","fetchCollectionsFailure","errorMessage"],"mappings":"AAAA,OACEA,uBADF,CAEEC,yBAFF,CAGEC,yBAHF,KAIO,SAJP,CAMA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,SAAO,CAC1CC,IAAI,CAAEJ,uBADoC,CAAP,EAA9B,CAIP,MAAO,IAAMK,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,cAAD,QAAqB,CAC1DF,IAAI,CAAEH,yBADoD,CAE1DM,OAAO,CAAED,cAFiD,CAArB,EAAhC,CAIP,MAAO,IAAME,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACC,YAAD,QAAmB,CACxDL,IAAI,CAAEF,yBADkD,CAExDK,OAAO,CAAEE,YAF+C,CAAnB,EAAhC,CAKP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {\n  FETCH_COLLECTIONS_START,\n  FETCH_COLLECTIONS_SUCCESS,\n  FETCH_COLLECTIONS_FAILURE,\n} from './types';\n\n// export const updateCollections = (collectionsMap) => (dispatch) => {\n//   dispatch({\n//     type: UPDATE_COLLECTIONS,\n//     payload: collectionsMap,\n//   });\n// };\n\nexport const fetchCollectionsStart = () => ({\n  type: FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\n  type: FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap,\n});\nexport const fetchCollectionsFailure = (errorMessage) => ({\n  type: FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage,\n});\n\n// @action  fetchCollectionsStartAsync promise-based action moved to saga instead\n\n// export const fetchCollectionsStartAsync = () => (dispatch) => {\n//   const collectionRef = firestore.collection('collections');\n//   dispatch(fetchCollectionsStart());\n//   //  Promise styled fetch:\n//   try {\n//     collectionRef.get().then((snapshot) => {\n//       const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n//       dispatch(fetchCollectionsSuccess(collectionsMap));\n//     });\n//   } catch (err) {\n//     dispatch(fetchCollectionsFailure(err.message));\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}