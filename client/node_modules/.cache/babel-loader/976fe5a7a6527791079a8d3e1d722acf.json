{"ast":null,"code":"var _jsxFileName = \"/home/jwillow/Documents/Web Dev/project-edith/src/page/shop/Shop.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections/CollectionsOverview';\nimport OverviewPage from '../../components/collections/OverviewPage';\nimport CollectionPage from '../collection/CollectionPage';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/db';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/actions/shop';\nimport { createStructuredSelector } from 'reselect';\n\nclass Shop extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props; // after mount: pull collection data\n\n    const collectionRef = firestore.collection('collections'); // get snapshot of collection when first run or upon chagnes\n\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot); // console.log(collectionsMap);\n      // action to update collections from store\n\n      updateCollections(collectionsMap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: OverviewPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default connect(null, {\n  updateCollections\n})(Shop);","map":{"version":3,"sources":["/home/jwillow/Documents/Web Dev/project-edith/src/page/shop/Shop.jsx"],"names":["React","Route","CollectionsOverview","OverviewPage","CollectionPage","firestore","convertCollectionsSnapshotToMap","connect","updateCollections","createStructuredSelector","Shop","Component","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","render","match","path"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,mBAAP,MAAgC,kDAAhC;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,mBAA3D;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,wBAAT,QAAyC,UAAzC;;AAEA,MAAMC,IAAN,SAAmBV,KAAK,CAACW,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCC,uBADiC,GACP,IADO;AAAA;;AAGjCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEL,MAAAA;AAAF,QAAwB,KAAKM,KAAnC,CADkB,CAElB;;AACA,UAAMC,aAAa,GAAGV,SAAS,CAACW,UAAV,CAAqB,aAArB,CAAtB,CAHkB,CAIlB;;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAOC,QAAP,IAAoB;AAC3C,YAAMC,cAAc,GAAGb,+BAA+B,CAACY,QAAD,CAAtD,CAD2C,CAE3C;AACA;;AACAV,MAAAA,iBAAiB,CAACW,cAAD,CAAjB;AACD,KALD;AAMD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKP,KAAvB;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEO,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEnB,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEkB,KAAK,CAACC,IAAK,gBADtB;AAEE,MAAA,SAAS,EAAElB,cAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF;AAUD;;AA5BgC;;AA+BnC,eAAeG,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA;AAAF,CAAP,CAAP,CAAqCE,IAArC,CAAf","sourcesContent":["import React from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionsOverview from '../../components/collections/CollectionsOverview';\nimport OverviewPage from '../../components/collections/OverviewPage';\nimport CollectionPage from '../collection/CollectionPage';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/db';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/actions/shop';\nimport { createStructuredSelector } from 'reselect';\n\nclass Shop extends React.Component {\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    // after mount: pull collection data\n    const collectionRef = firestore.collection('collections');\n    // get snapshot of collection when first run or upon chagnes\n    collectionRef.onSnapshot(async (snapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      // console.log(collectionsMap);\n      // action to update collections from store\n      updateCollections(collectionsMap);\n    });\n  }\n\n  render() {\n    const { match } = this.props;\n    return (\n      <div>\n        <Route exact path={`${match.path}`} component={OverviewPage} />\n\n        <Route\n          path={`${match.path}/:collectionId`}\n          component={CollectionPage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { updateCollections })(Shop);\n"]},"metadata":{},"sourceType":"module"}