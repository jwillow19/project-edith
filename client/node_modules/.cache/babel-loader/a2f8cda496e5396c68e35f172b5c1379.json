{"ast":null,"code":"import React from'react';import StripeCheckout from'react-stripe-checkout';import logo from'../../assets/refine-logo.png';import axios from'axios';var StripeButton=function StripeButton(_ref){var price=_ref.price;var priceInCent=price*100;var publishableKey='pk_test_2dS6LunL71FlSuRqeJU14RuF00TF6VuBIA';console.log(typeof priceInCent);// @handler handleToken send payment post-req to backend\nvar handleToken=function handleToken(token){console.log(token);// axios post-req to backend with payment information\naxios({url:'/payment',method:'post',data:{amount:priceInCent,token:token}}).then(function(respsonse){alert('Payment Success');}).catch(function(error){console.log('Payment Error: ',error.response);alert(\"Issue with payment.\");});};return/*#__PURE__*/React.createElement(StripeCheckout,{name:\"Edith Eyewear Ltd.\"// the pop-in header title\n,description:\"Your total is $\".concat(price)// the pop-in header subtitle\n,image:logo// the pop-in header image (default none)\n//   ComponentClass='div'\n,label:\"Pay Now\",panelLabel:\"Pay Now\"// prepended to the amount in the bottom pay button\n,amount:priceInCent// cents\n,stripeKey:publishableKey//   email='info@vidhub.co'\n// Note: Enabling either address option will give the user the ability to\n// fill out both. Addresses are sent as a second parameter in the token callback.\n,shippingAddress:true,billingAddress:true// Note: enabling both zipCode checks and billing or shipping address will\n// cause zipCheck to be pulled from billing address (set to shipping if none provided).\n,token:handleToken// submit callback\n//   opened={this.onOpened} // called when the checkout popin is opened (no IE6/7)\n//   closed={this.onClosed} // called when the checkout popin is closed (no IE6/7)\n// Note: `reconfigureOnUpdate` should be set to true IFF, for some reason\n// you are using multiple stripe keys\n,reconfigureOnUpdate:false,triggerEvent:\"onClick\"});};export default StripeButton;","map":{"version":3,"sources":["/home/jwillow/Documents/Web Dev/project-edith/client/src/components/stripe/StripeButton.jsx"],"names":["React","StripeCheckout","logo","axios","StripeButton","price","priceInCent","publishableKey","console","log","handleToken","token","url","method","data","amount","then","respsonse","alert","catch","error","response"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,cAAP,KAA2B,uBAA3B,CACA,MAAOC,CAAAA,IAAP,KAAiB,8BAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAe,IAAZC,CAAAA,KAAY,MAAZA,KAAY,CAClC,GAAMC,CAAAA,WAAW,CAAGD,KAAK,CAAG,GAA5B,CACA,GAAME,CAAAA,cAAc,CAAG,4CAAvB,CACAC,OAAO,CAACC,GAAR,CAAY,MAAOH,CAAAA,WAAnB,EACA;AACA,GAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC7BH,OAAO,CAACC,GAAR,CAAYE,KAAZ,EACA;AACAR,KAAK,CAAC,CACJS,GAAG,CAAE,UADD,CAEJC,MAAM,CAAE,MAFJ,CAGJC,IAAI,CAAE,CACJC,MAAM,CAAET,WADJ,CAEJK,KAAK,CAALA,KAFI,CAHF,CAAD,CAAL,CAQGK,IARH,CAQQ,SAACC,SAAD,CAAe,CACnBC,KAAK,CAAC,iBAAD,CAAL,CACD,CAVH,EAWGC,KAXH,CAWS,SAACC,KAAD,CAAW,CAChBZ,OAAO,CAACC,GAAR,CAAY,iBAAZ,CAA+BW,KAAK,CAACC,QAArC,EACAH,KAAK,uBAAL,CACD,CAdH,EAeD,CAlBD,CAoBA,mBACE,oBAAC,cAAD,EACE,IAAI,CAAC,oBAAqB;AAD5B,CAEE,WAAW,0BAAoBb,KAApB,CAA6B;AAF1C,CAGE,KAAK,CAAEH,IAAM;AACb;AAJF,CAKE,KAAK,CAAC,SALR,CAME,UAAU,CAAC,SAAU;AANvB,CAOE,MAAM,CAAEI,WAAa;AAPvB,CAQE,SAAS,CAAEC,cACX;AACA;AACA;AAXF,CAYE,eAAe,KAZjB,CAaE,cAAc,KACd;AACA;AAfF,CAgBE,KAAK,CAAEG,WAAa;AACpB;AACA;AACA;AACA;AApBF,CAqBE,mBAAmB,CAAE,KArBvB,CAsBE,YAAY,CAAC,SAtBf,EADF,CA0BD,CAnDD,CAqDA,cAAeN,CAAAA,YAAf","sourcesContent":["import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport logo from '../../assets/refine-logo.png';\nimport axios from 'axios';\n\nconst StripeButton = ({ price }) => {\n  const priceInCent = price * 100;\n  const publishableKey = 'pk_test_2dS6LunL71FlSuRqeJU14RuF00TF6VuBIA';\n  console.log(typeof priceInCent);\n  // @handler handleToken send payment post-req to backend\n  const handleToken = (token) => {\n    console.log(token);\n    // axios post-req to backend with payment information\n    axios({\n      url: '/payment',\n      method: 'post',\n      data: {\n        amount: priceInCent,\n        token,\n      },\n    })\n      .then((respsonse) => {\n        alert('Payment Success');\n      })\n      .catch((error) => {\n        console.log('Payment Error: ', error.response);\n        alert(`Issue with payment.`);\n      });\n  };\n\n  return (\n    <StripeCheckout\n      name='Edith Eyewear Ltd.' // the pop-in header title\n      description={`Your total is $${price}`} // the pop-in header subtitle\n      image={logo} // the pop-in header image (default none)\n      //   ComponentClass='div'\n      label='Pay Now'\n      panelLabel='Pay Now' // prepended to the amount in the bottom pay button\n      amount={priceInCent} // cents\n      stripeKey={publishableKey}\n      //   email='info@vidhub.co'\n      // Note: Enabling either address option will give the user the ability to\n      // fill out both. Addresses are sent as a second parameter in the token callback.\n      shippingAddress\n      billingAddress\n      // Note: enabling both zipCode checks and billing or shipping address will\n      // cause zipCheck to be pulled from billing address (set to shipping if none provided).\n      token={handleToken} // submit callback\n      //   opened={this.onOpened} // called when the checkout popin is opened (no IE6/7)\n      //   closed={this.onClosed} // called when the checkout popin is closed (no IE6/7)\n      // Note: `reconfigureOnUpdate` should be set to true IFF, for some reason\n      // you are using multiple stripe keys\n      reconfigureOnUpdate={false}\n      triggerEvent='onClick'\n    />\n  );\n};\n\nexport default StripeButton;\n"]},"metadata":{},"sourceType":"module"}