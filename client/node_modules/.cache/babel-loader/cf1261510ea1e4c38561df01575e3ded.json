{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, USER_LOADED, AUTH_ERR, LOGOUT, SET_USER } from '../actions/types';\nimport { auth } from '../../firebase/db'; // @action  takes in a user object from authStateChanged and return action object\n\nexport const setUser = user => ({\n  type: SET_USER,\n  payload: user\n}); // @action  log user in with email and password\n\nexport const loginWithEmailAndPassword = (email, password) => async dispatch => {\n  try {\n    // firebase.auth method to sign in, search unique email identifier and verify password\n    await auth.signInWithEmailAndPassword(email, password);\n    dispatch({\n      type: LOGIN_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/home/jwillow/Documents/Web Dev/project-edith/src/redux/actions/user.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED","AUTH_ERR","LOGOUT","SET_USER","auth","setUser","user","type","payload","loginWithEmailAndPassword","email","password","dispatch","signInWithEmailAndPassword","err","console","error"],"mappings":"AAAA,SACEA,gBADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,UAJF,EAKEC,WALF,EAMEC,QANF,EAOEC,MAPF,EAQEC,QARF,QASO,kBATP;AAUA,SAASC,IAAT,QAAqB,mBAArB,C,CAEA;;AACA,OAAO,MAAMC,OAAO,GAAIC,IAAD,KAAW;AAChCC,EAAAA,IAAI,EAAEJ,QAD0B;AAEhCK,EAAAA,OAAO,EAAEF;AAFuB,CAAX,CAAhB,C,CAKP;;AACA,OAAO,MAAMG,yBAAyB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAC5DC,QAD4D,IAEzD;AACH,MAAI;AACF;AACA,UAAMR,IAAI,CAACS,0BAAL,CAAgCH,KAAhC,EAAuCC,QAAvC,CAAN;AACAC,IAAAA,QAAQ,CAAC;AACPL,MAAAA,IAAI,EAAET;AADC,KAAD,CAAR;AAGD,GAND,CAME,OAAOgB,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACAF,IAAAA,QAAQ,CAAC;AACPL,MAAAA,IAAI,EAAER;AADC,KAAD,CAAR;AAGD;AACF,CAfM","sourcesContent":["import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  USER_LOADED,\n  AUTH_ERR,\n  LOGOUT,\n  SET_USER,\n} from '../actions/types';\nimport { auth } from '../../firebase/db';\n\n// @action  takes in a user object from authStateChanged and return action object\nexport const setUser = (user) => ({\n  type: SET_USER,\n  payload: user,\n});\n\n// @action  log user in with email and password\nexport const loginWithEmailAndPassword = (email, password) => async (\n  dispatch\n) => {\n  try {\n    // firebase.auth method to sign in, search unique email identifier and verify password\n    await auth.signInWithEmailAndPassword(email, password);\n    dispatch({\n      type: LOGIN_SUCCESS,\n    });\n  } catch (err) {\n    console.error(err);\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}