{"ast":null,"code":"import { GOOGLE_SIGNIN_START, GOOGLE_SIGNIN_SUCCESS, GOOGLE_SIGNIN_FAILURE, EMAIL_SIGNIN_START, EMAIL_SIGNIN_SUCCESS, EMAIL_SIGNIN_FAILURE } from '../actions/types';\nimport { googleProvider, auth, createUserProfile } from '../../firebase/db';\nimport { googleSignInSuccess, googleSignInFailure } from '../actions/user';\nimport { takeLatest, put, all, call } from 'redux-saga/effects'; // @saga    sign in with Google, if account DNE, create profile\n\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider); //get userAuth object from popup\n\n    const userRef = yield call(createUserProfile, user); //get userRef - similar to async/await with yield\n\n    const userSnapshot = yield userRef.get(); //get userSnapshot from QueryReference object\n\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    })); // sign in with snapshot.data()\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* googleSignInStart() {\n  yield takeLatest(GOOGLE_SIGNIN_START, signInWithGoogle);\n} // @saga    takes in all user-sagas and pass to root-saga\n\nexport function* userSagas() {\n  yield all([call(googleSignInStart)]);\n}","map":{"version":3,"sources":["/home/jwillow/Documents/Web Dev/project-edith/src/redux/saga/user.saga.js"],"names":["GOOGLE_SIGNIN_START","GOOGLE_SIGNIN_SUCCESS","GOOGLE_SIGNIN_FAILURE","EMAIL_SIGNIN_START","EMAIL_SIGNIN_SUCCESS","EMAIL_SIGNIN_FAILURE","googleProvider","auth","createUserProfile","googleSignInSuccess","googleSignInFailure","takeLatest","put","all","call","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","googleSignInStart","userSagas"],"mappings":"AAAA,SACEA,mBADF,EAEEC,qBAFF,EAGEC,qBAHF,EAIEC,kBAJF,EAKEC,oBALF,EAMEC,oBANF,QAOO,kBAPP;AAQA,SAASC,cAAT,EAAyBC,IAAzB,EAA+BC,iBAA/B,QAAwD,mBAAxD;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,iBAAzD;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C,C,CAEA;;AACA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMT,IAAI,CAACU,eAAL,CAAqBX,cAArB,CAAvB,CADE,CAC2D;;AAC7D,UAAMY,OAAO,GAAG,MAAMJ,IAAI,CAACN,iBAAD,EAAoBQ,IAApB,CAA1B,CAFE,CAEmD;;AACrD,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B,CAHE,CAGwC;;AAC1C,UAAMR,GAAG,CACPH,mBAAmB,CAAC;AAAEY,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADZ,CAAT,CAJE,CAMC;AACJ,GAPD,CAOE,OAAOC,KAAP,EAAc;AACd,UAAMX,GAAG,CAACF,mBAAmB,CAACa,KAAD,CAApB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,iBAAV,GAA8B;AACnC,QAAMb,UAAU,CAACX,mBAAD,EAAsBe,gBAAtB,CAAhB;AACD,C,CACD;;AACA,OAAO,UAAUU,SAAV,GAAsB;AAC3B,QAAMZ,GAAG,CAAC,CAACC,IAAI,CAACU,iBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import {\n  GOOGLE_SIGNIN_START,\n  GOOGLE_SIGNIN_SUCCESS,\n  GOOGLE_SIGNIN_FAILURE,\n  EMAIL_SIGNIN_START,\n  EMAIL_SIGNIN_SUCCESS,\n  EMAIL_SIGNIN_FAILURE,\n} from '../actions/types';\nimport { googleProvider, auth, createUserProfile } from '../../firebase/db';\nimport { googleSignInSuccess, googleSignInFailure } from '../actions/user';\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\n\n// @saga    sign in with Google, if account DNE, create profile\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider); //get userAuth object from popup\n    const userRef = yield call(createUserProfile, user); //get userRef - similar to async/await with yield\n    const userSnapshot = yield userRef.get(); //get userSnapshot from QueryReference object\n    yield put(\n      googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    ); // sign in with snapshot.data()\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\n\nexport function* googleSignInStart() {\n  yield takeLatest(GOOGLE_SIGNIN_START, signInWithGoogle);\n}\n// @saga    takes in all user-sagas and pass to root-saga\nexport function* userSagas() {\n  yield all([call(googleSignInStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}