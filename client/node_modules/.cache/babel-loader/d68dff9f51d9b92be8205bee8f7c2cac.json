{"ast":null,"code":"import cart from '../redux/reducers/cart';\nexport const addItemToCart = (cartItems, itemToAdd) => {\n  // check if item is in cart - .find() returns item that validation condition to true\n  const itemExist = cartItems.find(cartItem => cartItem.id === itemToAdd.id); // itemExist = null if itemToAdd not in cartItems\n  // map each unique, individual item and increase quantity if same item - no duplicates\n\n  if (itemExist) {\n    return cartItems.map(cartItem => cartItem.id === itemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...itemToAdd,\n    quantity: 1\n  }];\n};\nexport const sumQuantity = cartItems => {\n  cartItems.reduce((accumulator, currentVal) => {\n    return accumulator + currentVal.quantity;\n  }, 0);\n};","map":{"version":3,"sources":["/home/jwillow/Documents/Web Dev/project-edith/src/utils/cart.utils.js"],"names":["cart","addItemToCart","cartItems","itemToAdd","itemExist","find","cartItem","id","map","quantity","sumQuantity","reduce","accumulator","currentVal"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,wBAAjB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACrD;AACA,QAAMC,SAAS,GAAGF,SAAS,CAACG,IAAV,CAAgBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBJ,SAAS,CAACI,EAAvD,CAAlB,CAFqD,CAIrD;AACA;;AACA,MAAIH,SAAJ,EAAe;AACb,WAAOF,SAAS,CAACM,GAAV,CAAeF,QAAD,IACnBA,QAAQ,CAACC,EAAT,KAAgBJ,SAAS,CAACI,EAA1B,GACI,EAAE,GAAGD,QAAL;AAAeG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,KADJ,GAEIH,QAHC,CAAP;AAKD;;AAED,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,SAAL;AAAgBM,IAAAA,QAAQ,EAAE;AAA1B,GAAf,CAAP;AACD,CAfM;AAiBP,OAAO,MAAMC,WAAW,GAAIR,SAAD,IAAe;AACxCA,EAAAA,SAAS,CAACS,MAAV,CAAiB,CAACC,WAAD,EAAcC,UAAd,KAA6B;AAC5C,WAAOD,WAAW,GAAGC,UAAU,CAACJ,QAAhC;AACD,GAFD,EAEG,CAFH;AAGD,CAJM","sourcesContent":["import cart from '../redux/reducers/cart';\n\nexport const addItemToCart = (cartItems, itemToAdd) => {\n  // check if item is in cart - .find() returns item that validation condition to true\n  const itemExist = cartItems.find((cartItem) => cartItem.id === itemToAdd.id);\n\n  // itemExist = null if itemToAdd not in cartItems\n  // map each unique, individual item and increase quantity if same item - no duplicates\n  if (itemExist) {\n    return cartItems.map((cartItem) =>\n      cartItem.id === itemToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    );\n  }\n\n  return [...cartItems, { ...itemToAdd, quantity: 1 }];\n};\n\nexport const sumQuantity = (cartItems) => {\n  cartItems.reduce((accumulator, currentVal) => {\n    return accumulator + currentVal.quantity;\n  }, 0);\n};\n"]},"metadata":{},"sourceType":"module"}