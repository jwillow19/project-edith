{"ast":null,"code":"import { REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, USER_LOADED, AUTH_ERR, LOGOUT, SET_USER } from '../actions/types';\nimport { auth } from '../../firebase/db'; // @action  takes in a user object from authStateChanged and return action object\n\nexport const setUser = user => dispatch => {\n  dispatch({\n    type: SET_USER,\n    payload: user\n  });\n}; // @action  log user in with email and password\n\nexport const loginWithEmailAndPassword = (email, password) => async dispatch => {\n  try {\n    // firebase.auth method to sign in, search unique email identifier and verify password\n    await auth.signInWithEmailAndPassword(email, password);\n    dispatch({\n      type: LOGIN_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/home/jwillow/Documents/Web Dev/project-edith/src/redux/actions/user.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","USER_LOADED","AUTH_ERR","LOGOUT","SET_USER","auth","setUser","user","dispatch","type","payload","loginWithEmailAndPassword","email","password","signInWithEmailAndPassword","err","console","error"],"mappings":"AAAA,SACEA,gBADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,UAJF,EAKEC,WALF,EAMEC,QANF,EAOEC,MAPF,EAQEC,QARF,QASO,kBATP;AAUA,SAASC,IAAT,QAAqB,mBAArB,C,CAEA;;AACA,OAAO,MAAMC,OAAO,GAAIC,IAAD,IAAWC,QAAD,IAAc;AAC7CA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEL,QADC;AAEPM,IAAAA,OAAO,EAAEH;AAFF,GAAD,CAAR;AAID,CALM,C,CAOP;;AACA,OAAO,MAAMI,yBAAyB,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAC5DL,QAD4D,IAEzD;AACH,MAAI;AACF;AACA,UAAMH,IAAI,CAACS,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAN;AACAL,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEV;AADC,KAAD,CAAR;AAGD,GAND,CAME,OAAOgB,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACAP,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAET;AADC,KAAD,CAAR;AAGD;AACF,CAfM","sourcesContent":["import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  USER_LOADED,\n  AUTH_ERR,\n  LOGOUT,\n  SET_USER,\n} from '../actions/types';\nimport { auth } from '../../firebase/db';\n\n// @action  takes in a user object from authStateChanged and return action object\nexport const setUser = (user) => (dispatch) => {\n  dispatch({\n    type: SET_USER,\n    payload: user,\n  });\n};\n\n// @action  log user in with email and password\nexport const loginWithEmailAndPassword = (email, password) => async (\n  dispatch\n) => {\n  try {\n    // firebase.auth method to sign in, search unique email identifier and verify password\n    await auth.signInWithEmailAndPassword(email, password);\n    dispatch({\n      type: LOGIN_SUCCESS,\n    });\n  } catch (err) {\n    console.error(err);\n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}