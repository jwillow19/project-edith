{"ast":null,"code":"import _toConsumableArray from\"/home/jwillow/Documents/Web Dev/project-edith/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/jwillow/Documents/Web Dev/project-edith/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";// @note    util functions checks for the FullModelCode to see if product is in cart\nexport var addItemToCart=function addItemToCart(cartItems,itemToAdd){// check if item is in cart - .find() returns item that validation condition to true\nvar itemExist=cartItems.find(function(cartItem){return cartItem.linkUrl.split('/')[1]===itemToAdd.linkUrl.split('/')[1];});// itemExist = null if itemToAdd not in cartItems\n// map each unique, individual item and increase quantity if same item - no duplicates\nif(itemExist){return cartItems.map(function(cartItem){return cartItem.linkUrl.split('/')[1]===itemToAdd.linkUrl.split('/')[1]?_objectSpread({},cartItem,{quantity:cartItem.quantity+1}):cartItem;});}return[].concat(_toConsumableArray(cartItems),[_objectSpread({},itemToAdd,{quantity:1})]);};export var sumQuantity=function sumQuantity(cartItems){var sum=cartItems.reduce(function(accumulator,cartItem){return accumulator+cartItem.quantity;},0);return sum;};//  @note   removes cartItem instance from cartItems array completely\nexport var removeItemFromCart=function removeItemFromCart(cartItems,itemToRemove){var newCartItem=cartItems.filter(function(cartItem){return cartItem.linkUrl.split('/')[1]!==itemToRemove.linkUrl.split('/')[1];});return newCartItem;};// @note    Using .map() with ternary to loop through array - then modify item quantity\nexport var decreaseItemCountByOne=function decreaseItemCountByOne(cartItems,itemToDecrease){var itemToModify=cartItems.find(function(cartItem){return cartItem.linkUrl.split('/')[1]===itemToDecrease.linkUrl.split('/')[1];});// case: if quantity is 1, remove instance completely from cart\nif(itemToModify.quantity===1){return removeItemFromCart(cartItems,itemToModify);}// case: if quantity is >1, map through array, find the matching item, modify the quantity of that item and return the item state\nreturn cartItems.map(function(cartItem){return cartItem.linkUrl.split('/')[1]===itemToDecrease.linkUrl.split('/')[1]?_objectSpread({},cartItem,{quantity:cartItem.quantity-1}):_objectSpread({},cartItem);});};//@note   incrase item quantity by one\nexport var IncreaseItemCountByOne=function IncreaseItemCountByOne(cartItems,itemToIncrease){// [NOTE] - map through array, find the matching item, modify the quantity of that item and return the item state\nreturn cartItems.map(function(cartItem){return cartItem.linkUrl.split('/')[1]===itemToIncrease.linkUrl.split('/')[1]?_objectSpread({},cartItem,{quantity:cartItem.quantity+1}):_objectSpread({},cartItem);});};","map":{"version":3,"sources":["/home/jwillow/Documents/Web Dev/project-edith/client/src/utils/cart.utils.js"],"names":["addItemToCart","cartItems","itemToAdd","itemExist","find","cartItem","linkUrl","split","map","quantity","sumQuantity","sum","reduce","accumulator","removeItemFromCart","itemToRemove","newCartItem","filter","decreaseItemCountByOne","itemToDecrease","itemToModify","IncreaseItemCountByOne","itemToIncrease"],"mappings":"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","sourcesContent":["// @note    util functions checks for the FullModelCode to see if product is in cart\nexport const addItemToCart = (cartItems, itemToAdd) => {\n  // check if item is in cart - .find() returns item that validation condition to true\n  const itemExist = cartItems.find(\n    (cartItem) =>\n      cartItem.linkUrl.split('/')[1] === itemToAdd.linkUrl.split('/')[1]\n  );\n  // itemExist = null if itemToAdd not in cartItems\n  // map each unique, individual item and increase quantity if same item - no duplicates\n  if (itemExist) {\n    return cartItems.map((cartItem) =>\n      cartItem.linkUrl.split('/')[1] === itemToAdd.linkUrl.split('/')[1]\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    );\n  }\n\n  return [...cartItems, { ...itemToAdd, quantity: 1 }];\n};\n\nexport const sumQuantity = (cartItems) => {\n  let sum = cartItems.reduce((accumulator, cartItem) => {\n    return accumulator + cartItem.quantity;\n  }, 0);\n  return sum;\n};\n\n//  @note   removes cartItem instance from cartItems array completely\nexport const removeItemFromCart = (cartItems, itemToRemove) => {\n  const newCartItem = cartItems.filter(\n    (cartItem) =>\n      cartItem.linkUrl.split('/')[1] !== itemToRemove.linkUrl.split('/')[1]\n  );\n  return newCartItem;\n};\n\n// @note    Using .map() with ternary to loop through array - then modify item quantity\nexport const decreaseItemCountByOne = (cartItems, itemToDecrease) => {\n  const itemToModify = cartItems.find(\n    (cartItem) =>\n      cartItem.linkUrl.split('/')[1] === itemToDecrease.linkUrl.split('/')[1]\n  );\n  // case: if quantity is 1, remove instance completely from cart\n  if (itemToModify.quantity === 1) {\n    return removeItemFromCart(cartItems, itemToModify);\n  }\n  // case: if quantity is >1, map through array, find the matching item, modify the quantity of that item and return the item state\n  return cartItems.map((cartItem) =>\n    cartItem.linkUrl.split('/')[1] === itemToDecrease.linkUrl.split('/')[1]\n      ? { ...cartItem, quantity: cartItem.quantity - 1 }\n      : { ...cartItem }\n  );\n};\n\n//@note   incrase item quantity by one\nexport const IncreaseItemCountByOne = (cartItems, itemToIncrease) => {\n  // [NOTE] - map through array, find the matching item, modify the quantity of that item and return the item state\n  return cartItems.map((cartItem) =>\n    cartItem.linkUrl.split('/')[1] === itemToIncrease.linkUrl.split('/')[1]\n      ? { ...cartItem, quantity: cartItem.quantity + 1 }\n      : { ...cartItem }\n  );\n};\n"]},"metadata":{},"sourceType":"module"}