{"ast":null,"code":"var _jsxFileName = \"/home/jwillow/Documents/Web Dev/project-edith/src/App.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Home from './page/home/Home';\nimport Shop from './page/shop/Shop';\nimport Header from './components/header/Header';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { auth } from './firebase/db';\nimport { createUserProfile } from './firebase/db';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { connect } from 'react-redux';\nimport { setUser } from './redux/actions/user';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.unsubscribeAuth = null;\n  }\n\n  componentDidMount() {\n    // Destructure in props in class component\n    const {\n      setUser\n    } = this.props; // open-subscription between App & Firebase\n    // auth.onAuthStateChanged triggers and reutnr user obj if authenticated, otherwise returns null\n\n    this.unsubscribeAuth = auth.onAuthStateChanged(async userAuth => {\n      try {\n        // on sign-in\n        if (userAuth) {\n          const userRef = await createUserProfile(userAuth); // this line sees if DB has changed by looking at snapshot\n\n          userRef.onSnapshot(snapshot => {\n            setUser({\n              id: snapshot.id,\n              ...snapshot.data()\n            });\n          });\n        } else {\n          // userAuth = null on Logout, set state to null\n          setUser(userAuth);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    // close subscription from auth to prevent memory leak\n    this.unsubscribeAuth();\n  }\n\n  render() {\n    const {\n      user\n    } = this.props;\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: Home,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: Shop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      render: () => user.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 36\n        }\n      }) : /*#__PURE__*/React.createElement(Login, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 58\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/register\",\n      render: () => user.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 36\n        }\n      }) : /*#__PURE__*/React.createElement(Register, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 58\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.user\n}); // NOTE: how you would dispatch without redux-thunk\n\n\nconst mapDispatchToProps = dispatch => ({\n  // setUsr prop is now\n  setUser: user => dispatch(setUser(user))\n}); // App.propTypes = {\n//   setUser: PropTypes.func.isRequired,\n// };\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/jwillow/Documents/Web Dev/project-edith/src/App.js"],"names":["React","PropTypes","Home","Shop","Header","Login","Register","BrowserRouter","Router","Route","Switch","Redirect","auth","createUserProfile","Provider","store","connect","setUser","App","Component","constructor","props","unsubscribeAuth","componentDidMount","onAuthStateChanged","userAuth","userRef","onSnapshot","snapshot","id","data","err","console","error","componentWillUnmount","render","user","currentUser","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Home from './page/home/Home';\nimport Shop from './page/shop/Shop';\nimport Header from './components/header/Header';\nimport Login from './components/auth/Login';\nimport Register from './components/auth/Register';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport { auth } from './firebase/db';\nimport { createUserProfile } from './firebase/db';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { connect } from 'react-redux';\nimport { setUser } from './redux/actions/user';\n\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  unsubscribeAuth = null;\n\n  componentDidMount() {\n    // Destructure in props in class component\n    const { setUser } = this.props;\n\n    // open-subscription between App & Firebase\n    // auth.onAuthStateChanged triggers and reutnr user obj if authenticated, otherwise returns null\n    this.unsubscribeAuth = auth.onAuthStateChanged(async (userAuth) => {\n      try {\n        // on sign-in\n        if (userAuth) {\n          const userRef = await createUserProfile(userAuth);\n\n          // this line sees if DB has changed by looking at snapshot\n          userRef.onSnapshot((snapshot) => {\n            setUser({\n              id: snapshot.id,\n              ...snapshot.data(),\n            });\n          });\n        } else {\n          // userAuth = null on Logout, set state to null\n          setUser(userAuth);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    // close subscription from auth to prevent memory leak\n    this.unsubscribeAuth();\n  }\n\n  render() {\n    const { user } = this.props;\n\n    return (\n      <Router>\n        <Header />\n        <div>\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route path='/shop' component={Shop} />\n            <Route\n              path='/login'\n              render={() =>\n                user.currentUser ? <Redirect to='/' /> : <Login />\n              }\n            />\n            <Route\n              path='/register'\n              render={() =>\n                user.currentUser ? <Redirect to='/' /> : <Register />\n              }\n            />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\n// NOTE: how you would dispatch without redux-thunk\nconst mapDispatchToProps = (dispatch) => ({\n  // setUsr prop is now\n  setUser: (user) => dispatch(setUser(user)),\n});\n\n// App.propTypes = {\n//   setUser: PropTypes.func.isRequired,\n// };\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}