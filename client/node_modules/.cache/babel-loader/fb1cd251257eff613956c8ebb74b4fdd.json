{"ast":null,"code":"var _jsxFileName = \"/home/jwillow/Documents/Web Dev/project-edith/src/page/shop/Shop.jsx\";\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport OverviewPage from '../../components/collections/OverviewPage';\nimport CollectionPage from '../collection/CollectionPage';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStart } from '../../redux/actions/shop';\nimport CollectionPageContainer from '../../page/collection/CollectionPage.container';\n\nconst Shop = ({\n  match,\n  fetchCollectionsStart\n}) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, []); // componentDidMount() {\n  //   fetchCollectionsStart();\n  //   // LiveUpdate fetch data method - get snapshot of collection when first run or upon chagnes\n  //   collectionRef.onSnapshot(async (snapshot) => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     // console.log(collectionsMap);\n  //     // action to update collections from store\n  //     updateCollections(collectionsMap);\n  //     this.setState({ loading: false });\n  //\n  //   });\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    component: OverviewPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    component: CollectionPageContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["/home/jwillow/Documents/Web Dev/project-edith/src/page/shop/Shop.jsx"],"names":["React","useEffect","Route","OverviewPage","CollectionPage","connect","fetchCollectionsStart","CollectionPageContainer","Shop","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AAEA,OAAOC,uBAAP,MAAoC,gDAApC;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASH,EAAAA;AAAT,CAAD,KAAsC;AACjDL,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,qBAAqB;AACtB,GAFQ,EAEN,EAFM,CAAT,CADiD,CAIjD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAEG,KAAK,CAACC,IAAK,EAAjC;AAAoC,IAAA,SAAS,EAAEP,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAG,GAAEM,KAAK,CAACC,IAAK,gBADtB;AAEE,IAAA,SAAS,EAAEH,uBAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAUD,CA5BD;;AA8BA,MAAMI,kBAAkB,GAAIC,QAAD,KAAe;AACxCN,EAAAA,qBAAqB,EAAE,MAAMM,QAAQ,CAACN,qBAAqB,EAAtB;AADG,CAAf,CAA3B;;AAIA,eAAeD,OAAO,CAAC,IAAD,EAAOM,kBAAP,CAAP,CAAkCH,IAAlC,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport OverviewPage from '../../components/collections/OverviewPage';\nimport CollectionPage from '../collection/CollectionPage';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStart } from '../../redux/actions/shop';\n\nimport CollectionPageContainer from '../../page/collection/CollectionPage.container';\n\nconst Shop = ({ match, fetchCollectionsStart }) => {\n  useEffect(() => {\n    fetchCollectionsStart();\n  }, []);\n  // componentDidMount() {\n\n  //   fetchCollectionsStart();\n  //   // LiveUpdate fetch data method - get snapshot of collection when first run or upon chagnes\n  //   collectionRef.onSnapshot(async (snapshot) => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     // console.log(collectionsMap);\n  //     // action to update collections from store\n  //     updateCollections(collectionsMap);\n  //     this.setState({ loading: false });\n  //\n  //   });\n  // }\n\n  return (\n    <div>\n      <Route exact path={`${match.path}`} component={OverviewPage} />\n\n      <Route\n        path={`${match.path}/:collectionId`}\n        component={CollectionPageContainer}\n      />\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart()),\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);\n"]},"metadata":{},"sourceType":"module"}